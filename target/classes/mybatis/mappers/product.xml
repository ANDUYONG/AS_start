<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
   
<mapper namespace="mapper.Product">
	<resultMap type="ProductVO" id="resultProduct">
	
<!-- 			기본 제품VO			 -->
		<result property="productNo" column="productNo"/>
		<result property="productName" column="productName"/>
		<result property="productGroup" column="productGroup"/>
		<result property="useManual" column="useManual"/>
		<result property="asManual" column="asManual"/>
		<result property="productImage" column="productImage"/>
		
		
		
<!--				 추가	 				-->
<!-- 				승인 VO		 		-->
		<result property="approvalStatus" column="approvalStatus"/> <!-- appr.approvalstatus -->
		<result property="approvalNum" column="approvalNum"/> <!-- appr.approvalnum -->
		
<!-- 				member		 		-->
		<result property="manufacName" column="manufacName"/> <!-- m.name -->
		<result property="uno" column="uno"/> <!-- mb.uno -->
		<result property="cuId" column="cuId"/>
		
<!-- 			component(부품) 			-->
		<result property="componentNo" column="componentNo"/>
		<result property="componentName" column="componentName"/>
		<result property="componentPrice" column="componentPrice"/>
		<result property="componentPart" column="componentPart"/>
		
		<result property="rejectionReason" column="rejectionReason"/>
	</resultMap>
<!-- 사용자 권한 -->
		<select id="selectUserRight" parameterType="String" resultType="int">
			<![CDATA[
				select mb.uno uno from member mb where mb.cuid=#{cuId}
			]]>
		</select>
	
		
<!-- 1. 제품 리스트 -->
		<select id="selectProductList" resultType="ProductVO" parameterType="java.util.Map">
				<include refid="ProductList"/>
		</select>
<!-- 2. 제품상세  -->
		<select id="selectProductDetail" resultMap="resultProduct" parameterType="java.util.Map">
			<include refid="ProductDetail"/>
		</select>
		<select id="selectCompo" resultType="ProductVO" parameterType="int">
			<![CDATA[
				select componentNo, productNo, name, price, part from component
				where productNo=#{productNo}
			]]>
		</select>
<!-- 3. 제품검색  -->
		<select id="selectProductGroup" resultType="String" parameterType="java.util.Map">
			<![CDATA[
				select distinct(p.prodGroup)
				from product p, manufacturer m, productApproval appr
				where p.cuId = m.cuId
                      and appr.productno = p.productno
                      and m.name like '%'|| #{manufacName} ||'%'
			]]>
		</select>
		<select id="searchProduct" resultType="ProductVO" parameterType="java.util.Map">
			    <include refid="search"/>
		</select>	
		
<!-- 4. 제품등록 -->
		<!-- 4-0. 제조사 이름 가져오기 -->
		<select id="manufacName" parameterType="String" resultType="String">
			<![CDATA[
				select m.name 
				from manufacturer m
				where m.cuId=#{cuId}
			]]>
		</select>
		<!-- 4-1. 제품 최신번호 가져오기 -->
		<select id="selectRecentProd" resultType="int">
			<![CDATA[
				select max(productNO) productNO from product
			]]>
		</select>
		<!-- 4-2. 부품 최신번호 가져오기 -->
		<select id="selectRecentCompo" resultType="int">
			<![CDATA[
			select max(componentNO) componentNo from component
			]]>
		</select>
		<!-- 4-3. 제품승인 최신번호 가져오기 -->
		<select id="selectRecentApprNum" resultType="int">
			select max(appr.approvalNum) approvalNum from productApproval appr
		</select>
		
		<!-- 4-4. 제품등록 -->
		<insert id="insertProduct" parameterType="java.util.Map">
				insert into product(
									productNo, 
									name, 
									prodGroup, 
									useManual, 
									asManual, 
									productImage, 
									cuId
									)
        		values( 
        			#{productNo}, 
        			#{productName}, 
        			#{productGroup}, 
        			#{useManual}, 
        			#{asManual}, 
        			#{productImage}, 
        			#{cuId}
        		)
		</insert>
		<!-- 4-5. 부품등록 -->
		<insert id="insertComponent" parameterType="java.util.List">
		       <foreach collection="list" item="item" index="index" separator=" " open="INSERT ALL" close="SELECT * FROM DUAL">
		        	  INTO component(
											componentNo, 
											productNo, 
											name, 
											price, 
											part
											)
		        	  VALUES( 
		        			#{item.componentNo}, 
		        			#{item.productNo}, 
		        			#{item.componentName}, 
		        			#{item.componentPrice, jdbcType=INTEGER}, 
		        			#{item.componentPart, jdbcType=INTEGER}
		        			)
		       </foreach>
		</insert>
		<!-- 4-6. 승인요청등록 -->
		<insert id="insertProductApply">
			insert into productApproval(approvalNum, approvalStatus, RejectionReason, ProductNo, applyDate) 
			values( #{approvalNum}, 3, '', #{productNo}, sysdate)
		</insert>
		
		
		
		
		
		
<!-- sql -->
	<!-- 제품리스트, 제품상세, 제품검색 부분의 sql문만 따로 분리해놓았다. *제품등록부분은 따로 분리하지 않았다. -->
	
	<!-- 1. 제품리스트 -->
			<sql id="ProductList">
					select productName, 
						   productNo,
	                       productGroup, 
	                       manufacName, 
	                       approvalStatus, 
	                       approvalNum 
	                from(
	    				select  rowNum as recNum,
	         			productName, productGroup, manufacName, approvalStatus, approvalNum, productNo
	                    from (  
	                    		<include refid="bringList"></include>
	                            )
	            		)
				where recNum between (#{section}-1)*100 + (#{pageNum}-1)*10+1 
			          and (#{section}-1)*100 + (#{pageNum})*10
			        <if test="uno == 1 || uno == 2">  <!-- 공급자, 사용자 -->
			        and approvalStatus=1                                                                     
			        </if>      
			</sql>
			<sql id="bringList">
			<![CDATA[
				select  p.productNo productNo, p.name productName, p.prodgroup productGroup, 
	                    m.name manufacName, appr.approvalstatus approvalStatus,
	                    appr.approvalNum approvalNum
	            from    product p, productapproval appr, manufacturer m
	            where   p.productno = appr.productno and m.cuid = p.cuid
			]]>
	        <if test="uno == 3">
	               and m.cuid=#{memberId}
	        </if>
	              order by approvalNum desc
			</sql>
	
	<!-- 2. 제품상세 -->
			<sql id="ProductDetail">
				<![CDATA[
			         select p.productno 		productNo, 
			         		p.name 				productName, 
			         		m.name 				manufacName,
			                p.prodgroup 		productGroup,
                            appr.approvalstatus approvalStatus,
                            appr.rejectionReason rejectionReason,
			                p.useManual 		useManual, 
			                p.asManual  		asManual, 
			                p.productImage  	productImage
			         from product p, productapproval appr, manufacturer m
	        	]]>
	         where p.productno = appr.productno 
	               and m.cuid = p.cuid 
	           <if test="uno == 1 || uno == 2">  <!-- 공급자, 사용자 -->
			      and appr.approvalstatus=1                                                                     
			   </if>
			   		and p.productNo = #{productNo}
			 order by appr.approvalnum desc
			</sql>
			
	<!-- 3. searchProduct (검색 + 페이징)  -->
			<!-- 1. id="search" :필요한 컬럼을 가져오는 기능과 페이징을 해주는 sql문이 있다. -->
			<!-- 2. id="selectSearch" :리스트 정보들을 내림차순으로 가져온다. -->
			<!-- 3. id="searchCondition" :정보들을 필터링해주는 조건문이 있다. -->
	
			<sql id="search"> <!-- 1. id="search" -->
				select     productName, 
	                       productGroup,
	                       productNo, 
	                       manufacName, 
	                       approvalStatus, 
	                       approvalNum 
	                from(
						   <include refid="selectSearch"/>		<!-- 2. id="selectSearch" -->
			        )
	        		where rowNum between (#{section}-1)*100 + (#{pageNum}-1)*10+1 and (#{section}-1)*100 + #{pageNum}*10
			</sql>
			
			<sql id="selectSearch">
				<![CDATA[
	    				select  rowNum as recNum,
	         			productName, productGroup, manufacName, approvalStatus, approvalNum, productNo, cuId
	                    from (  select  p.name productName, p.prodgroup productGroup, p.productNo productNo,
	                                    m.name manufacName, appr.approvalstatus approvalStatus,
	                                    appr.approvalNum approvalNum, m.cuid cuId
	                            from product p, productapproval appr, manufacturer m
	                            where p.productno = appr.productno and m.cuid = p.cuid
	                            order by approvalNum DESC
	                            )
				]]>
				<include refid="searchCondition"/>  <!-- 3. id="searchCondition"  -->
			</sql>
			
			
			<sql id="searchCondition">

			<if test = "productGroup != null">
			where
			         productGroup=#{productGroup}
			        	<if test = "manufacName != null">
			        	  and manufacName=#{manufacName}
			        	</if>
			        	
			        	<if test = "manufacName == null">
				        	<if test = "productName != null">
					        		and productName like '%' || #{productName} || '%'
					        	</if>
	<!-- 아무것도 입력하지 않고 검색시 -->
					        	<if test = "productName == null">
					        		
					        		<if test="uno == 1 || uno == 2">  <!-- 공급자, 사용자 -->
							        	and approvalStatus=1                                                                     
							        </if>
				        	</if>
			        	</if>
			        	and cuId=#{cuId} 
		    </if>
	<!-- 제품분류를 선택하지 않을 시 -->
			        <if test = "productGroup == null">
			        where
			        	<if test = "manufacName != null">
			        			manufacName=#{manufacName}
			        		<if test = "productName != null">
			        			and productName like '%' || #{productName} || '%'
			        		</if>
			        		<if test="uno == 1 || uno == 2">  <!-- 공급자, 사용자 -->
						        and approvalStatus=1                                                                     
						   </if>
						   and cuId=#{cuId} 
			        	</if>
			        	
			        	
			        	<if test = "manufacName == null">
			        	<!-- 제품이름만 검색시 -->
				        	<if test = "productName != null">
				        		productName like '%' || #{productName} || '%'
				        		<if test="uno == 1 || uno == 2">  <!-- 공급자, 사용자 -->
						        	and approvalStatus=1                                                                     
						        </if>
						        and cuId=#{cuId} 
				        	</if>
				        	<!-- 아무것도 입력하지 않고 검색시 -->
				        	<if test = "productName == null">
				        		
				        		<if test="uno == 1 || uno == 2">  <!-- 공급자, 사용자 -->
						        	approvalStatus=1        
						        	and cuId=#{cuId}                                                             
						        </if>
						   		<if test="uno == 3">  <!-- 제조사 -->
									cuId=#{cuId}                                                             
						        </if>
				        	</if>
			           </if>
			        </if>
			</sql>
	</mapper>